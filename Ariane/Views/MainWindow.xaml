<Window x:Class="Ariane.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:converters="clr-namespace:Ariane.Converters" 
              WindowStartupLocation="CenterScreen"
              ResizeMode="CanResize" MinHeight="550" MinWidth="450" 
              Height="400" Width="600" 
              DataContext="{Binding Path=VM, RelativeSource={RelativeSource Self}}" 
              Loaded="MainWindow_OnLoaded" Title="Ariane" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/BaseControlStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:BoolToImageConverter x:Key="BoolToImageConverter" />
            <converters:RadioBoolToIntConverter x:Key="RadioBoolToIntConverter" />
            <converters:ReverseBoolToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter" />
            <converters:SelectedItemToIsEnabledConverter x:Key="SelectedItemToIsEnabledConverter" />
            <Storyboard x:Key="sbShowBottomMenu" >
                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,-330" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Key="sbHideBottomMenu">
                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="0,0,0,-330" AccelerationRatio=".9" Duration="0:0:1" />
            </Storyboard>
        </ResourceDictionary>        
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="R" Modifiers="Ctrl" Command="{Binding Path=StartProcessesCommand}" />
        <KeyBinding Key="R" Modifiers="Ctrl+Shift" Command="{Binding Path=StopProcessesCommand}" />
    </Window.InputBindings>
    <DockPanel LastChildFill="True">
        <Menu Background="White" DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Exit" Click="MenuItem_Click_1"   />
            </MenuItem>
            <MenuItem Header="Commands">
                <MenuItem Header="Start All Ctrl+R" Command="{Binding Path=StartProcessesCommand}"   />
                <MenuItem Header="Stop All Ctrl+Shift+R" Command="{Binding Path=StopProcessesCommand}"   />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Click="NavigateToGitHub"  />
            </MenuItem>
            <!--todo menu for reports-->
            <!--<MenuItem Header="Reports">
                <MenuItem Header="Open" Command="{Binding Path=ViewReportCommand}" />
            </MenuItem>-->
        </Menu>        
        <Grid x:Name="LayoutRoot">
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="200*" />
                <RowDefinition Height="Auto" />
                <!--<RowDefinition Height="200*" />-->
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <CheckBox Margin="10,0,10,0" Name="MonitorConsoleCheckbox" VerticalAlignment="Center" Grid.Column="0" IsChecked="True" ToolTip="Check if console output new lines should be monitored.">Monitor console output</CheckBox>
                <WrapPanel Grid.Column="2">
                    <Button  Command="{Binding Path=StartProcessesCommand}" ToolTip="Ctrl+R">Start All</Button>
                    <Button Command="{Binding Path=StopProcessesCommand}" Margin="5,0,5,0" ToolTip="Ctrl+Shift+R">Stop All</Button>
                </WrapPanel>
            </Grid>
            <ListBox Name="ProcessesListBox" ItemsSource="{Binding Path=Processes}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding Path=SelectedProcess}" Grid.Row="1" 
                 HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Measuring Configuration" IsEnabled="{Binding Path=SelectedProcess, Converter={StaticResource SelectedItemToIsEnabledConverter}}" Click="MenuItem_Click" />                        
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,2" DataContext="{Binding Path=.}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="200"/>
                                </Grid.ColumnDefinitions>
                                <Label Margin="5,0,5,0" Grid.Column="0" DataContext="{Binding .}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Height="20" ToolTip="Indicates measured time as Median if not going over the MAX limit." 
                                       Source="{Binding Path=IsMeasurementOverLimit, Converter={StaticResource BoolToImageConverter}}"/>
                                </Label>
                                <Grid Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Visibility="{Binding ElementName=MonitorConsoleCheckbox, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter} }" Margin="5,0,0,0" ToolTip="Number of new lines in output console." Content="{Binding Path=CountOfNotVisitedOutputLines}"></Label>
                                    <Label Grid.Column="1" Margin="5,0,0,0" ToolTip="{Binding Path=FilePath}" Content="{Binding Path=DisplayName}" HorizontalAlignment="Left" />
                                </Grid>                                
                                <Grid Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Command="{Binding Path=RestartCommand}" Visibility="{Binding Path=RestartButtonVisibility}">Restart</Button>
                                    <Button Grid.Column="1" Command="{Binding Path=StartStopCommand}" Content="{Binding Path=StartStopContentButton}"></Button>                                    
                                </Grid>
                            </Grid>
                            <ProgressBar Grid.Row="1" Height="4" Visibility="{Binding Path=InProgress, Converter={StaticResource BoolToVisibilityConverter}}"  IsIndeterminate="True"/>
                            <!--<dxe:ProgressBarMarqueeHorizontalAnimationControl Grid.Row="1" Visibility="{Binding Path=InProgress, Converter={StaticResource BoolToVisibilityConverter}}" />-->
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Panel.ZIndex="2" Grid.Row="2" Name="pnlBottomMenu" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,-330">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <WrapPanel Grid.Column="1">
                        <Button Name="btnBottomMenuHide" Height="30" Click="btnBottomMenuHide_Click" Content="Hide logs" Visibility="Hidden"/>
                        <Button Name="btnBottomMenuShow" Height="30" Click="btnBottomMenuShow_Click" Content="Show logs"/>
                    </WrapPanel>                    
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListView Grid.Row="0" Background="#012456" FontFamily="Courier New" Foreground="White" Height="300" DisplayMemberPath="Text" DataContext="{Binding Path=SelectedProcess}"
                  ItemsSource="{Binding Path=ConsoleOutputStream}" VirtualizingStackPanel.VirtualizationMode="Recycling" Name="LogList">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Start text" Visibility="{Binding Path=LastMeasureSetting.StartVisibility}" Command="{Binding Path=AddStartCodeCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                                <MenuItem Header="Stop text" Visibility="{Binding Path=LastMeasureSetting.StopVisibility}" Command="{Binding Path=AddStopCodeCommand}" 
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListView.CommandBindings>
                            <CommandBinding Command="Copy" CanExecute="CopyCommand_OnCanExecute" Executed="CommandBinding_OnExecuted" ></CommandBinding>
                        </ListView.CommandBindings>                        
                    </ListView>
                    <StatusBar Height="30" Grid.Row="1">
                        <StatusBarItem>
                            <WrapPanel>
                                <RadioButton IsChecked="{Binding Path=SelectedProcess.RowFilterSelected, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=-1}">All</RadioButton>
                                <RadioButton IsChecked="{Binding Path=SelectedProcess.RowFilterSelected, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=0}">Text</RadioButton>
                                <RadioButton IsChecked="{Binding Path=SelectedProcess.RowFilterSelected, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=1}">Success</RadioButton>
                                <RadioButton IsChecked="{Binding Path=SelectedProcess.RowFilterSelected, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=2}">Error</RadioButton>
                                <CheckBox Margin="10,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Right" IsChecked="{Binding Path=IsSelectedProcessTogglingOn}" ToolTip="Check if the most active process should be selected automatically.">Active process mode</CheckBox>
                            </WrapPanel>
                        </StatusBarItem>
                    </StatusBar>
                </Grid>
            </StackPanel>            
        </Grid>
    </DockPanel>
</Window>
